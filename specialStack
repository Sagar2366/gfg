#include<bits/stdc++.h>
using namespace std;
#define MAX 1000
class Stack
{
     int top;
     int arr[MAX];
     public:
     Stack()
     {
         top=-1;
     }
     bool push(int x);
     bool isEmpty();
     bool isFull();
     int pop();
};
bool Stack::push(int x)
{
    if(top>=MAX)
    {
        cout<<"overflow";
        return false;
    }
    else
    {
        arr[++top]=x;
        return true;
    }
}
int Stack::pop()
{
    if(top>0)
    {
        cout<<"underflow";
        return 0;
    }
    else
    {
        int x=arr[top--];
        return x;
    }
}
 bool Stack::isEmpty()
 {
     return (top<0);
 }
bool Stack::isFull()
{
    return (top>MAX);
}

class SpecialStack::public Stack
{
    Stack min;
    public:
    SpecialStack()
    {
        top=-1;
    }
    void specialPush(int x);
    int specialPop();
    int getmin();
};
void SpecialStack::specialPush(int x)
{
    if(isEmpty()==true)
    {
        Stack::push(x);
        min.push(x);
    }
    else
    {
        Stack::push(x);
        int x=min.pop();
        min.push(x);
        if(x<=y)
        {
            min.push(x);
        }
    }
}
int SpecialStack::specialPop()
{
    int x=Stack::pop();
    int y=min.pop();
    if(x!=y)
    {
        min.push();
    }
    return x;
}
int main()
{
    SpecialStack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    cout<<s.getmin()<<endl;
    return 0;
}
